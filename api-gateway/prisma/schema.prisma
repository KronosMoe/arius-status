generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  image     String
  createdAt DateTime @default(now())

  Monitors      Monitors[]
  Agents        Agents[]
  Sessions      Sessions[]
  Notifications Notifications[]
  Settings      Settings?
}

model Settings {
  id        String   @id @default(uuid())
  userId    String   @unique
  theme     String   @default("light")
  createdAt DateTime @default(now())

  user Users @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Notifications {
  id        String   @id @default(uuid())
  title     String
  userId    String
  method    String
  message   String
  metadata  Json?
  createdAt DateTime @default(now())

  user Users @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Sessions {
  id        String   @id @default(uuid())
  userId    String
  platform  String
  token     String   @unique
  deviceIP  String
  expires   DateTime
  createdAt DateTime @default(now())

  user Users @relation(fields: [userId], references: [id])
}

model Monitors {
  id        String   @id @default(uuid())
  name      String
  address   String
  type      String
  status    String   @default("UNKNOWN")
  interval  Int      @default(300)
  userId    String
  agentId   String
  createdAt DateTime @default(now())

  user          Users           @relation(fields: [userId], references: [id])
  agent         Agents          @relation(fields: [agentId], references: [id])
  StatusResults StatusResults[]
}

model StatusResults {
  id           String   @id @default(uuid())
  monitorId    String
  responseTime Float
  metadata     Json?
  createdAt    DateTime @default(now())

  monitor Monitors @relation(fields: [monitorId], references: [id])
}

model Agents {
  id        String   @id @default(uuid())
  name      String
  token     String   @unique
  isOnline  Boolean  @default(false)
  userId    String
  createdAt DateTime @default(now())

  user     Users      @relation(fields: [userId], references: [id])
  Monitors Monitors[]
}
