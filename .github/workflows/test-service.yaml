name: Test Microservices

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  notify-eslint:
    name: Run Eslint (notify service)
    runs-on: ubuntu-latest

    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: "24.x"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        run: cd services/notify && pnpm run lint

  notify-build:
    name: Build Notify Service
    runs-on: ubuntu-latest
    needs: notify-eslint

    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: "24.x"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Prisma Generate
        run: cd packages/db && pnpm run generate

      - name: Build Prisma
        run: cd packages/db && pnpm run build

      - name: Run Backend Build
        run: cd services/notify && pnpm run build

  docker-build-app:
    name: Build Docker Image (App)
    runs-on: ubuntu-latest
    needs: [notify-build]

    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ~/.cache/docker
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker Image
        run: |
          docker build --no-cache -f services/notify/Dockerfile -t ${{ secrets.IMAGE_NAME }} .
