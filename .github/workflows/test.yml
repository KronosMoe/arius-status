name: Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  frontend-eslint:
    permissions:
      contents: read
      security-events: write
      actions: read

    uses: KronosMoe/ci-template/.github/workflows/eslint.yml@main
    with:
      custom-run: "pnpm run lint --filter frontend"

  backend-eslint:
    permissions:
      contents: read
      security-events: write
      actions: read

    uses: KronosMoe/ci-template/.github/workflows/eslint.yml@main
    with:
      custom-run: "pnpm run lint --filter backend"

  frontend-build:
    needs: frontend-eslint
    permissions:
      contents: read
      security-events: write
      actions: read

    uses: KronosMoe/ci-template/.github/workflows/build.yml@main
    with:
      custom-run: "pnpm run build --filter frontend"

  backend-build:
    needs: backend-eslint
    permissions:
      contents: read
      security-events: write
      actions: read

    uses: KronosMoe/ci-template/.github/workflows/build.yml@main
    with:
      custom-run: "pnpm run prisma:generate --filter backend && pnpm run build --filter frontend"

  docker-build:
    name: Build Docker Image (Test)
    runs-on: ubuntu-24.04
    needs: [frontend-build, backend-build]

    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ~/.cache/docker
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker Image
        run: |
          docker build --no-cache -t ${{ secrets.image_name }} -f Dockerfile .
